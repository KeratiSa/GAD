repeat wait() until game:IsLoaded()
task.wait(20)

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")

local PetUtilities = require(ReplicatedStorage.Modules.PetServices.PetUtilities)
local ReplicationClass = require(ReplicatedStorage.Modules.ReplicationClass)
local ActivePetsService = ReplicationClass.new("ActivePetsService_Replicator")

local webhookUrl = _G.Config.web_hook or ""
local PC_NAME = _G.Config.PC or "Unknown"

local function sendDiscordEmbed(title, playerName, petType, weight, level)
    local embed = {{
        title = title,
        description = string.format(
            "💻:%s\n\nผู้เล่น: %s\nประเภทสัตว์: %s\nน้ำหนัก: %.2f\nอายุ (Level): %d",
            PC_NAME, playerName, petType, weight, level
        ),
        color = 0x1abc9c,
        timestamp = os.date("!%Y-%m-%dT%H:%M:%SZ"),
        footer = {
            text = "Roblox Pet Monitor"
        }
    }}

    local payload = {
        embeds = embed
    }

    local jsonData = HttpService:JSONEncode(payload)

    local response = http_request({
        Url = webhookUrl,
        Method = "POST",
        Headers = {
            ["Content-Type"] = "application/json",
            ["Content-Length"] = tostring(#jsonData)
        },
        Body = jsonData
    })

    print("Status Code:", response.StatusCode)
    print("Response Body:", response.Body)
end

local function checkAndSend()
    local success, dataResult = pcall(function()
        return ActivePetsService:YieldUntilData()
    end)

    if success then
        local dataTable = dataResult.Table
        if dataTable and dataTable.PlayerPetData then
            local player = Players.LocalPlayer
            if not player then
                warn("LocalPlayer ยังไม่พร้อม")
                return
            end

            local playerName = player.Name
            local playerPetData = dataTable.PlayerPetData[playerName]
            if playerPetData then
                local petInventory = playerPetData['PetInventory']
                if petInventory and petInventory['Data'] then
                    local petData = petInventory['Data']
                    local blacklist = {}

                    for _, v in pairs(petData) do
                        local petType = v.PetType or "Unknown"

                        if blacklist[petType] then
                            continue
                        end

                        local baseWeight = v.PetData.BaseWeight or 1
                        local level = v.PetData.Level or 1
                        local weight = PetUtilities:CalculateWeight(baseWeight, level)

                        if weight >= 20 then
                            sendDiscordEmbed("⚠️ เจอสัตว์น้ำหนักมาก!", playerName, petType, weight, level)
                        elseif (weight > 6 and level <= 10) or (weight > 10 and level <= 25) then
                            sendDiscordEmbed("🐾 สัตว์เข้าเงื่อนไข", playerName, petType, weight, level)
                        end
                    end
                end
            end
        end
    end
end

while true do
    print("[Pet Monitor] Checking pets at:", os.date("%Y-%m-%d %H:%M:%S"))
    checkAndSend()
    task.wait(1500) -- 25 นาที
end
